package main

type {{container}} struct {
	data []{{type}}
	size int
	ptr  int
}

func New{{container}}() *{{container}} {
	return &{{container}}{make([]{{type}}, 0), 0, 0}
}

func (s *{{container}}) Empty() bool {
	return s.size == 0
}

func (s *{{container}}) Size() int {
	return s.size
}

func (s *{{container}}) Top() {{type}} {
	return s.data[s.ptr-1]
}

func (s *{{container}}) Push(d {{type}}) {
	s.data = append(s.data, d)
	s.ptr++
	s.size++
}

func (s *{{container}}) Pop() {{type}} {
	s.ptr--
	s.size--
	return s.data[s.ptr]
}

func (s *{{container}}) Clear() {
	s.ptr = 0
	s.size = 0
	s.data = make([]{{type}}, 0)
}
